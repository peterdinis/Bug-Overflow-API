type Technology {
    id: ID!
    name: String!
    image: String!
}

type User {
    id: ID!
    userName: String!
    email: String!
    password: String!
    token: String!
    favoriteTechnologies: [Technology!]!
    createdAt: String!
    posts: [Post!]!
}

type Post {
    id: ID!
    content: String!
    createdAt: String!
    user: User!
}

type Comment {
    id: ID!
    createdAt: String!
    commentedText: String!
    post: Post!
    user: User!
}

input CreateTechnology {
    name: String!
    image: String!
}

input updateTechnology {
    name: String
    image: String
}

input AuthInput {
    userName: String!
    email: String!
    password: String!
}

type Query {
    getAllTechnologies: [Technology!]!
    paginatedTechnologies(page: Int!, pageSize: Int!): [Technology!]!
    searchTechnologies(name: String!): Technology!
    getTechnologyById(id: ID!): Technology
}

type Mutation {
    createTechnology(createNewTechnology: CreateTechnology!): Technology!
    updateTechnology(id: ID!, updateTechnology: UpdateTechnology!): Technology
    deleteTechnology(id: ID!): ID
    #registerUser(createNewUser: AuthInput!)
    #loginUser(loginNewUser: AuthInput!)
}
